'use client';

import { useState, useEffect } from 'react';
import { useSearchParams } from 'next/navigation';

interface ProductViewerData {
  success: boolean;
  productId?: string;
  summary?: any;
  fullProduct?: any;
  error?: string;
}

export default function ProductViewer() {
  const searchParams = useSearchParams();
  const urlProductId = searchParams.get('id');
  
  const [productId, setProductId] = useState(urlProductId || '1306870988');
  const [loading, setLoading] = useState(false);
  const [data, setData] = useState<ProductViewerData | null>(null);

  const loadProduct = async (selectedProductId?: string) => {
    const idToLoad = selectedProductId || productId;
    setLoading(true);
    try {
      const res = await fetch(`/api/unas/test-product-full?id=${idToLoad}`);
      const json = await res.json();
      setData(json);
    } catch (error) {
      setData({ success: false, error: error.message });
    } finally {
      setLoading(false);
    }
  };

  // Load URL parameter product on mount
  useEffect(() => {
    if (urlProductId) {
      setProductId(urlProductId);
      loadProduct(urlProductId);
    } else {
      loadProduct();
    }
  }, [urlProductId]);

  return (
    <div className="p-8 max-w-6xl mx-auto">
      <div className="flex items-center justify-between mb-8">
        <h1 className="text-3xl font-bold">üõçÔ∏è Unas Term√©k R√©szletek</h1>
        {urlProductId && (
          <a
            href="/admin/database"
            className="inline-flex items-center px-4 py-2 bg-gray-600 text-white rounded-lg hover:bg-gray-700 transition-colors"
          >
            ‚Üê Vissza az adatb√°zishoz
          </a>
        )}
      </div>

      {/* Loading indicator or product info */}
      {loading && (
        <div className="mb-8 bg-blue-50 border border-blue-200 p-6 rounded-lg">
          <div className="flex items-center">
            <div className="animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600 mr-3"></div>
            <p className="text-blue-800">Term√©k adatok bet√∂lt√©se...</p>
          </div>
        </div>
      )}
      
      {data?.success && (
        <div className="mb-8 bg-green-50 border border-green-200 p-4 rounded-lg">
          <p className="text-green-800">
            <span className="font-medium">Bet√∂lt√∂tt term√©k:</span> {data.summary?.basic.name} (ID: {productId})
          </p>
        </div>
      )}

      {/* Eredm√©ny */}
      {data && (
        <>
          {data.success ? (
            <div className="space-y-6">
              {/* Alapadatok */}
              <div className="bg-white p-6 rounded-lg shadow">
                <h3 className="text-xl font-semibold mb-4">üì¶ Alapadatok</h3>
                                 <div className="grid grid-cols-2 gap-4">
                   <div>
                     <p className="text-gray-700 font-medium">N√©v</p>
                     <p className="font-bold text-gray-900">{data.summary?.basic.name}</p>
                   </div>
                   <div>
                     <p className="text-gray-700 font-medium">SKU</p>
                     <p className="font-bold text-gray-900">{data.summary?.basic.sku}</p>
                   </div>
                   <div>
                     <p className="text-gray-700 font-medium">√År</p>
                     <p className="font-bold text-gray-900">{data.summary?.basic.price}</p>
                   </div>
                   <div>
                     <p className="text-gray-700 font-medium">ID</p>
                     <p className="font-bold text-gray-900">{data.summary?.basic.id}</p>
                   </div>
                 </div>
              </div>

              {/* K√©szlet */}
              <div className="bg-white p-6 rounded-lg shadow">
                <h3 className="text-xl font-semibold mb-4">üìä K√©szlet inform√°ci√≥</h3>
                                 <div className="grid grid-cols-3 gap-4">
                   <div>
                     <p className="text-gray-700 font-medium">Mennyis√©g</p>
                     <p className="font-bold text-2xl text-gray-900">{data.summary?.stock.quantity} db</p>
                   </div>
                   <div>
                     <p className="text-gray-700 font-medium">St√°tusz</p>
                     <p className={`font-bold text-lg ${data.summary?.stock.active ? 'text-green-600' : 'text-red-600'}`}>
                       {data.summary?.stock.active ? 'Akt√≠v' : 'Inakt√≠v'}
                     </p>
                   </div>
                   <div>
                     <p className="text-gray-700 font-medium">Min. mennyis√©g</p>
                     <p className="font-bold text-gray-900">{data.summary?.stock.minimum} db</p>
                   </div>
                 </div>
              </div>

                             {/* Kateg√≥ri√°k */}
               <div className="bg-white p-6 rounded-lg shadow">
                 <h3 className="text-xl font-semibold mb-4">üè∑Ô∏è Kateg√≥ri√°k</h3>
                 {data.fullProduct?.allCategories && data.fullProduct.allCategories.length > 0 ? (
                   <div className="space-y-2">
                     {data.fullProduct.allCategories.map((cat: any, idx: number) => (
                       <div key={idx} className="flex justify-between items-center py-2 px-3 bg-gray-50 rounded">
                         <span className="font-medium text-gray-900">{cat.name}</span>
                         <div className="text-sm">
                           <span className="text-gray-700">ID: {cat.id}</span>
                           <span className="ml-2 px-2 py-1 bg-blue-100 text-blue-800 rounded text-xs">
                             {cat.type}
                           </span>
                         </div>
                       </div>
                     ))}
                   </div>
                 ) : (
                   <p className="text-gray-700">Nincs kateg√≥ria inform√°ci√≥</p>
                 )}
               </div>

              {/* Tartalom */}
              <div className="bg-white p-6 rounded-lg shadow">
                <h3 className="text-xl font-semibold mb-4">üìù Tartalom</h3>
                                 <div className="space-y-4">
                   {data.fullProduct?.shortDescription && (
                     <div>
                       <p className="text-gray-700 font-medium mb-2">R√∂vid le√≠r√°s:</p>
                       <div className="bg-gray-50 p-4 rounded border text-gray-900" 
                            dangerouslySetInnerHTML={{ __html: data.fullProduct.shortDescription }} />
                     </div>
                   )}
                   {data.fullProduct?.description && (
                     <div>
                       <p className="text-gray-700 font-medium mb-2">R√©szletes le√≠r√°s:</p>
                       <div className="bg-gray-50 p-4 rounded border text-gray-900" 
                            dangerouslySetInnerHTML={{ __html: data.fullProduct.description }} />
                     </div>
                   )}
                 </div>
              </div>

              {/* K√©pek */}
              {data.summary?.images.url && (
                <div className="bg-white p-6 rounded-lg shadow">
                  <h3 className="text-xl font-semibold mb-4">üñºÔ∏è K√©p</h3>
                  <img 
                    src={data.summary.images.url} 
                    alt={data.summary.images.alt || 'Term√©k k√©p'}
                    className="max-w-sm rounded"
                  />
                </div>
              )}

              {/* Param√©terek */}
              {data.fullProduct?.parameters && data.fullProduct.parameters.length > 0 && (
                <div className="bg-white p-6 rounded-lg shadow">
                  <h3 className="text-xl font-semibold mb-4">‚öôÔ∏è Param√©terek ({data.fullProduct.parameters.length})</h3>
                                     <div className="space-y-2">
                     {data.fullProduct.parameters.map((param: any, idx: number) => (
                       <div key={idx} className="flex justify-between py-3 px-3 bg-gray-50 rounded border-b">
                         <span className="text-gray-700 font-medium">{param.name}</span>
                         <span className="font-bold text-gray-900">{param.value}</span>
                       </div>
                     ))}
                   </div>
                </div>
              )}

                             {/* Akci√≥s √°rak (id≈ëszakos) */}
               {data.fullProduct?.salePrice && (
                 <div className="bg-white p-6 rounded-lg shadow">
                   <h3 className="text-xl font-semibold mb-4">üî• Akci√≥s √°r (id≈ëszakos)</h3>
                   <div className={`p-4 rounded border-2 ${data.fullProduct.salePrice.isActive ? 'bg-red-50 border-red-300' : 'bg-gray-50 border-gray-300'}`}>
                     <div className="flex justify-between items-center">
                       <div>
                         <div className="text-sm text-gray-700">
                           {data.fullProduct.salePrice.startDate && (
                             <span>Kezd√©s: {data.fullProduct.salePrice.startDate}</span>
                           )}
                           {data.fullProduct.salePrice.endDate && (
                             <span className="ml-4">V√©g: {data.fullProduct.salePrice.endDate}</span>
                           )}
                           {!data.fullProduct.salePrice.endDate && data.fullProduct.salePrice.startDate && (
                             <span className="ml-4 text-green-600 font-medium">V√©gtelen akci√≥</span>
                           )}
                         </div>
                         <div className={`text-xs px-2 py-1 rounded mt-2 inline-block ${data.fullProduct.salePrice.isActive ? 'bg-green-500 text-white' : 'bg-gray-500 text-white'}`}>
                           {data.fullProduct.salePrice.isActive ? 'AKT√çV AKCI√ì' : 'LEJ√ÅRT AKCI√ì'}
                         </div>
                       </div>
                       <div className="text-right">
                         <div className="text-gray-700">{data.fullProduct.salePrice.net} Ft nett√≥</div>
                         <div className={`font-bold text-2xl ${data.fullProduct.salePrice.isActive ? 'text-red-600' : 'text-gray-600'}`}>
                           {data.fullProduct.salePrice.gross} Ft
                         </div>
                       </div>
                     </div>
                   </div>
                 </div>
               )}

               {/* Vev≈ëcsoport akci√≥s √°rak */}
               {data.fullProduct?.groupSalePrices && data.fullProduct.groupSalePrices.length > 0 && (
                 <div className="bg-white p-6 rounded-lg shadow">
                   <h3 className="text-xl font-semibold mb-4">üéØ Vev≈ëcsoport akci√≥s √°rak ({data.fullProduct.groupSalePrices.length})</h3>
                   <div className="space-y-3">
                     {data.fullProduct.groupSalePrices.map((salePrice: any, idx: number) => (
                       <div key={idx} className={`p-4 rounded border ${salePrice.isActive ? 'bg-orange-50 border-orange-300' : 'bg-gray-50 border-gray-300'}`}>
                         <div className="flex justify-between items-center">
                           <div>
                             <span className="font-medium text-gray-900">{salePrice.groupName}</span>
                             <div className="text-sm text-gray-700 mt-1">
                               {salePrice.saleStart && <span>Kezd√©s: {salePrice.saleStart}</span>}
                               {salePrice.saleEnd && <span className="ml-4">V√©g: {salePrice.saleEnd}</span>}
                             </div>
                             <div className={`text-xs px-2 py-1 rounded mt-2 inline-block ${salePrice.isActive ? 'bg-orange-500 text-white' : 'bg-gray-500 text-white'}`}>
                               {salePrice.isActive ? 'AKT√çV' : 'LEJ√ÅRT'}
                             </div>
                           </div>
                           <div className="text-right">
                             <div className="text-gray-700">{salePrice.saleNet} Ft nett√≥</div>
                             <div className={`font-bold text-lg ${salePrice.isActive ? 'text-orange-600' : 'text-gray-600'}`}>
                               {salePrice.saleGross} Ft
                             </div>
                           </div>
                         </div>
                       </div>
                     ))}
                   </div>
                 </div>
               )}

               {/* Vev≈ëcsoport √°rak (nem akci√≥s) */}
               {data.fullProduct?.specialPrices && data.fullProduct.specialPrices.length > 0 && (
                 <div className="bg-white p-6 rounded-lg shadow">
                   <h3 className="text-xl font-semibold mb-4">üë• Vev≈ëcsoport √°rak ({data.fullProduct.specialPrices.length})</h3>
                   <div className="overflow-x-auto">
                     <table className="w-full text-sm">
                       <thead>
                         <tr className="border-b">
                           <th className="text-left py-2 text-gray-900">Csoport</th>
                           <th className="text-right py-2 text-gray-900">Nett√≥</th>
                           <th className="text-right py-2 text-gray-900">Brutt√≥</th>
                           <th className="text-center py-2 text-gray-900">Kedvezm√©ny</th>
                         </tr>
                       </thead>
                       <tbody>
                         {data.fullProduct.specialPrices.map((price: any, idx: number) => (
                           <tr key={idx} className="border-b bg-blue-50">
                             <td className="py-2 text-gray-900">{price.groupName}</td>
                             <td className="text-right text-gray-900">{price.priceNet} Ft</td>
                             <td className="text-right text-gray-900 font-medium">{price.priceGross} Ft</td>
                             <td className="text-center">
                               {price.discountPercent ? (
                                 <span className="px-2 py-1 bg-blue-500 text-white rounded text-xs">
                                   -{price.discountPercent}%
                                 </span>
                               ) : (
                                 <span className="px-2 py-1 bg-gray-400 text-white rounded text-xs">
                                   Speci√°lis √°r
                                 </span>
                               )}
                             </td>
                           </tr>
                         ))}
                       </tbody>
                     </table>
                   </div>
                 </div>
               )}
            </div>
          ) : (
            <div className="bg-red-50 p-6 rounded-lg">
              <p className="text-red-800">Hiba: {data.error}</p>
            </div>
          )}
        </>
      )}
    </div>
  );
} 